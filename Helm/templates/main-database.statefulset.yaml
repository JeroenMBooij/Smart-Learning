apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: teacher-didac-main-db-deployment
  labels:
    app: teacher-didac-main-db-deployment
spec:
  serviceName: teacher-didac-main-db-service
  selector:
    matchLabels:
      app: teacher-didac-main-db
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: teacher-didac-main-db
    spec:
      containers:
        - name: teacher-didac-main-db
          image: mysql
          ports:
          - containerPort: {{.Values.deployment.ports.mainDb.containerPort}}
          resources:
            requests:
              memory: {{.Values.deployment.resources.mainDb.requestMemory}}
              cpu: {{.Values.deployment.resources.mainDb.requestCPU}}
            limits:
              memory: {{.Values.deployment.resources.mainDb.limitMemory}}
              cpu: {{.Values.deployment.resources.mainDb.limitCPU}}
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom: 
              secretKeyRef:
                name: teacher-didac-secret
                key: database-main-password
          volumeMounts:
          - name: data
            mountPath: /var/lib/mysql
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: main-db-claim


---
apiVersion: v1
kind: Service
metadata:
  name: teacher-didac-main-db-service
spec:
  selector:
    app: teacher-didac-main-db
  ports:
    - protocol: TCP
      port: {{.Values.deployment.ports.mainDb.containerPort}}
      targetPort: {{.Values.deployment.ports.mainDb.targetPort}}


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: main-db-claim
spec:
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{.Values.deployment.database.main.storageCapacity}}
